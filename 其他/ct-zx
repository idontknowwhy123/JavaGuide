问题现象：
任务执行非常耗时，正常情况下只需要几百毫秒的任务，实际耗时十几秒，导致环境上任务执行不完
日志定位：1、是否是设备响应太慢，通过日志发现设备响应那块实际耗时大概只花了1S
          2、是否是因为同步锁等待导致线程阻塞，从而导致耗时严重，走查代码发现并没有非常耗时的等待锁操作
          3、通过top命令发现服务进程CPU冲高到了1400%
		     具体分析：3.1、通过jstack命令查看线程情况，发现GC线程比较耗CPU
			           3.2、查看GC日志，大概1秒执行一次FULL GC，FULL GC总共耗时大概是0.5s
					   3.3、通过jmap命令查看堆内存使用情况，发现存在很多相同的ItmNeInfo对象都放在很多List集合里面
					   3.4、查看代码，看哪些地方存在new ItmNeInfo()并存放在List集合的地方
					   3.5、发现有个方法每执行一个任务都会去调用它，这个方法每次执行时都会首先new一个ArrayList,然后从缓存中取出该类型所有网元对应
					        Json字符串，最后再将Json字符串转化为对象，现场环境上的网元实例数大概是2000多，任务是两万个，每5分钟粒度总共只执行完了6000
							多个任务，这样理论上每5分钟粒度会创建上千万个ItmNeInfo对象。
			 解决办法：每次缓存的时候不再将网元对象转化为字符串再进行存储了，而是直接缓存网元对象，这样每次从缓存取的时候是直接取的对象，使用的就是缓存           	              中原有的对象而不是通过字符串转化过来的对象
			 效果：现在Full GC的频率从之前的1s延长到现在7,8分钟一次，任务耗时从之前的十几秒缩减到现在的几百毫秒
       
  
